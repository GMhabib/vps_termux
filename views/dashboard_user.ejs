<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Dashboard - Glassmorphism</title>
    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    
    <style>
        /*
        * CSS PERBAIKAN DENGAN TEMA GLASSMORPHISM
        */

        :root {
            --card-bg-color: rgba(255, 255, 255, 0.15);
            --border-color: rgba(255, 255, 255, 0.2);
            --text-color: #f0f0f0;
            --text-muted-color: #c0c0c0;
            --blur-intensity: 10px;
        }

        body { 
            font-family: 'Poppins', 'Segoe UI', Roboto, sans-serif;
            /* Latar belakang gradient SVG yang ringan */
            background-color: #1a1a2e;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100%25' height='100%25' viewBox='0 0 1600 800'%3E%3Cg %3E%3Cpolygon fill='%231b213b' points='1600 160 0 460 0 350 1600 50'/%3E%3Cpolygon fill='%231c2848' points='1600 260 0 560 0 450 1600 150'/%3E%3Cpolygon fill='%231d2f55' points='1600 360 0 660 0 550 1600 250'/%3E%3Cpolygon fill='%231e3662' points='1600 460 0 760 0 650 1600 350'/%3E%3Cpolygon fill='%231F3D6F' points='1600 800 0 800 0 750 1600 450'/%3E%3C/g%3E%3C/svg%3E");
            background-attachment: fixed;
            background-size: cover;
            color: var(--text-color);
            min-height: 100vh;
        }

        /* --- STYLE INTI GLASSMORPHISM --- */
        .glassmorphic {
            background: var(--card-bg-color);
            backdrop-filter: blur(var(--blur-intensity));
            -webkit-backdrop-filter: blur(var(--blur-intensity)); /* Untuk Safari */
            border-radius: 1rem;
            border: 1px solid var(--border-color);
            box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.3);
        }

        /* --- PENERAPAN PADA ELEMEN --- */
        .navbar.glassmorphic {
            border-radius: 0; /* Navbar tidak perlu rounded corner */
            border-left: none;
            border-right: none;
            border-top: none;
        }
        
        .card.glassmorphic {
            border: none;
        }

        .modal-content.glassmorphic {
             border: 1px solid var(--border-color);
        }
        
        .card-header, .modal-header {
            background: rgba(255, 255, 255, 0.1);
            border-bottom: 1px solid var(--border-color);
        }

        h3, h5, .navbar-brand, .navbar-text {
            color: var(--text-color) !important;
        }

        .path-display {
            background-color: rgba(0,0,0,0.2);
            padding: 0.75rem 1.25rem;
            border-radius: 0.5rem;
            margin-bottom: 1.5rem;
            word-break: break-all;
            border-left: 5px solid #00bcd4; 
            color: var(--text-color);
            font-size: 0.95rem;
        }
        
        /* Tabel */
        .table {
            --bs-table-bg: transparent;
            --bs-table-striped-bg: rgba(0, 0, 0, 0.1);
            --bs-table-hover-bg: rgba(0, 188, 212, 0.2);
            --bs-table-color: var(--text-color);
            --bs-table-border-color: var(--border-color);
        }
        .table a {
            color: #80deea !important; /* Cyan-like color */
            font-weight: 500;
            text-decoration: none;
            transition: color 0.2s;
        }
        .table a:hover {
            color: #ffffff !important;
        }
        .table-responsive { max-height: 60vh; }
        thead th {
            color: var(--text-muted-color);
        }

        /* Animasi */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .container, .glassmorphic {
            animation: fadeIn 0.7s ease-out forwards;
        }
        .btn {
            transition: all 0.2s ease-in-out;
        }
        .btn:hover {
            transform: translateY(-2px) scale(1.03);
            box-shadow: 0 4px 15px rgba(0,0,0,0.2);
        }

        /* --- CSS UNTUK MODAL & TERMINAL --- */
        .modal-header, .modal-footer {
            border-color: var(--border-color);
        }

        #terminal {
            background-color: rgba(20, 20, 30, 0.85); /* Sedikit transparan */
            color: #d4d4d4;
            padding: 15px;
            font-family: 'Consolas', 'Courier New', monospace;
            height: 450px;
            overflow-y: auto;
            white-space: pre-wrap;
            word-wrap: break-word;
            font-size: 0.9em;
            border-radius: 0.5rem;
        }
        #terminal-input-container {
            display: flex;
            background-color: rgba(20, 20, 30, 0.85);
            padding: 10px 15px;
            border-top: 1px solid #3a3a3a;
            border-radius: 0 0 0.5rem 0.5rem;
        }
        #terminal-input {
            flex-grow: 1; background-color: transparent; border: none;
            color: #d4d4d4; outline: none; caret-color: #00bcd4;
            
        }
        #terminal-prompt { color: #4CAF50; margin-right: 10px; font-weight: bold; overflow: scroll; }

        /* Notifikasi */
        #notification {
            position: fixed; bottom: 20px; right: 20px;
            padding: 15px 25px; border-radius: 8px; color: white;
            z-index: 9999; opacity: 0; visibility: hidden;
            transform: translateY(20px); transition: all 0.4s ease-in-out;
            box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            /* Style notifikasi default */
            background: linear-gradient(45deg, #28a745, #218838);
        }
        #notification.error { background: linear-gradient(45deg, #dc3545, #c82333); }
        #notification.show { opacity: 1; visibility: visible; transform: translateY(0); }
        
        /* Form */
        .form-control {
            background-color: rgba(0,0,0,0.2);
            border: 1px solid var(--border-color);
            color: var(--text-color);
        }
        .form-control:focus {
            background-color: rgba(0,0,0,0.3);
            border-color: #00bcd4;
            box-shadow: 0 0 0 0.25rem rgba(0, 188, 212, 0.25);
            color: var(--text-color);
        }
        .form-control::placeholder { color: var(--text-muted-color); }
        /* Style untuk input file */
        .form-control[type="file"]::file-selector-button {
            background-color: #0d6efd;
            color: white;
            border: none;
            padding: 0.375rem 0.75rem;
            border-radius: 0.25rem;
            cursor: pointer;
            transition: background-color .15s ease-in-out;
        }
        .form-control[type="file"]::file-selector-button:hover {
            background-color: #0b5ed7;
        }


        /* Responsifitas Tambahan */
        @media (max-width: 768px) {
            .action-buttons form, .action-buttons button, .action-buttons a {
                margin: 5px 0; display: block; width: 100%;
            }
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark glassmorphic sticky-top">
        <div class="container-fluid container">
            <a class="navbar-brand" href="/dashboard"><i class="fas fa-cubes me-2"></i> User Files</a>
            <div class="d-flex text-white align-items-center">
                <span class="navbar-text me-3 d-none d-md-inline">
                    Selamat Datang, <strong><%= user.username %></strong>
                </span>
                <a href="/logout" class="btn btn-outline-light"><i class="fas fa-sign-out-alt me-1"></i> Logout</a>
            </div>
        </div>
    </nav>

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-lg-11 col-12">
                <div class="card glassmorphic mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h3 class="mb-0 d-flex align-items-center"><i class="fas fa-folder-open me-3 text-info"></i> File Manager</h3>
                        <button type="button" class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#webShellModal">
                            <i class="fas fa-terminal me-2"></i> Buka Web Shell
                        </button>
                    </div>
                    <div class="card-body p-4">
                        <div class="p-3 mb-4 rounded" style="background-color: rgba(0,0,0,0.2);">
                            <h5 class="text-light"><i class="fas fa-upload me-2 text-primary"></i> Upload File Baru</h5>
                            <form action="/upload" method="POST" enctype="multipart/form-data" class="d-flex flex-column flex-md-row mt-3">
                                <input type="hidden" name="currentPath" value="<%= currentPath %>">
                                <input class="form-control me-md-2 mb-2 mb-md-0" type="file" name="filedata" required>
                                <button class="btn btn-primary flex-shrink-0" type="submit"><i class="fas fa-cloud-upload-alt me-2"></i>Upload</button>
                            </form>
                        </div>
                        
                        <h5 class="mt-4 text-light"><i class="fas fa-list-alt me-2 text-success"></i> Daftar File & Folder</h5>
                        <div class="path-display">
                            <i class="fas fa-location-arrow me-2"></i> Lokasi: <strong>/<%= currentPath.replace(/\\/g, '/') %></strong>
                        </div>
                        
                        <div class="table-responsive">
                            <table class="table table-hover align-middle">
                                <thead class="border-bottom border-secondary">
                                    <tr>
                                        <th class="py-3">Nama</th>
                                        <th class="text-nowrap">Ukuran</th>
                                        <th class="text-nowrap">Aksi</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% files.forEach(file => { %>
                                        <tr>
                                            <td class="text-truncate" style="max-width: 250px;">
                                                <% if (file.isDirectory) { %>
                                                    <i class="fas fa-folder text-warning me-2"></i>
                                                    <a href="/dashboard?path=<%= encodeURIComponent(file.path) %>"><%= file.name %></a>
                                                <% } else { %>
                                                    <i class="fas fa-file text-secondary me-2"></i> <%= file.name %>
                                                <% } %>
                                            </td>
                                            <td><span class="badge bg-info text-dark"><%= file.size %></span></td>
                                            <td class="action-buttons">
                                                <% if (!file.isDirectory) { %>
                                                    <a href="/download/<%= encodeURIComponent(file.path) %>" class="btn btn-success btn-sm" title="Download"><i class="fas fa-download"></i></a>
                                                    
                                                    <% if (/\.(zip|tar|tar\.gz|tgz)$/i.test(file.name)) { %>
                                                        <form action="/extract/<%= encodeURIComponent(file.path) %>" method="POST" onsubmit="return confirm('Yakin ingin mengekstrak <%= file.name %>?');" class="d-inline">
                                                            <button type="submit" class="btn btn-warning btn-sm" title="Ekstrak"><i class="fas fa-box-open"></i></button>
                                                        </form>
                                                    <% } %>
                                                    
                                                    <button type="button" class="btn btn-info btn-sm edit-btn" data-bs-toggle="modal" data-bs-target="#editFileModal" data-path="<%= file.path %>" title="Edit File"><i class="fas fa-edit"></i></button>
                                                <% } %>
                                            </td>
                                        </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="mb-5"></div>
    </div>
    
    <div class="modal fade" id="webShellModal" tabindex="-1" aria-labelledby="webShellModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content glassmorphic">
                <div class="modal-header">
                    <h5 class="modal-title" id="webShellModalLabel"><i class="fas fa-terminal me-2"></i> Web Shell</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="terminal">
                        <span>Selamat datang di Web Shell. Perintah berbahaya diblokir.</span><br>
                        <span>Lokasi kerja: <strong style="color: #00bcd4;"><%= currentPath.replace(/\\/g, '/') %></strong></span>
                    </div>
                    <form id="terminal-form">
                        <div id="terminal-input-container">
                            <span id="terminal-prompt"><%= user.username %>@server:<span style="color: #00bcd4;"><%= currentPath.replace(/\\/g, '/').split('/').pop() || '~' %></span>$&nbsp;</span>
                            <input type="text" id="terminal-input" autocomplete="off" autofocus>
                            <input type="hidden" id="shell-current-path" value="<%= currentPath %>">
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
                </div>
            </div>
        </div>
    </div>
    
    <div class="modal fade" id="editFileModal" tabindex="-1" aria-labelledby="editFileModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content glassmorphic">
                <form id="edit-form" method="POST">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editFileModalLabel"><i class="fas fa-edit me-2"></i> Edit File: <span id="filename-span"></span></h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="currentPath" value="<%= currentPath %>"> 
                        <textarea name="fileContent" id="fileContent" class="form-control" rows="20" style="font-family: 'Courier New', Courier, monospace;"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Tutup</button>
                        <button type="submit" class="btn btn-primary"><i class="fas fa-save me-2"></i> Simpan Perubahan</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div id="notification"></div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // SCRIPT JAVASCRIPT ANDA TIDAK PERLU DIUBAH
        // Logika yang sudah ada berfungsi dengan baik.
        document.addEventListener('DOMContentLoaded', () => {

            const notification = document.getElementById('notification');
            function showNotification(message, type = 'success') {
                notification.textContent = message;
                notification.className = ''; 
                notification.classList.add('show');
                if (type === 'error') {
                    notification.classList.add('error');
                }
                setTimeout(() => {
                    notification.classList.remove('show');
                }, 3000); 
            }

            const editModal = new bootstrap.Modal(document.getElementById('editFileModal'));
            
            document.querySelectorAll('.edit-btn').forEach(button => {
                button.addEventListener('click', async (e) => {
                    const filePath = e.currentTarget.dataset.path;
                    document.getElementById('filename-span').textContent = filePath.split(/[\\/]/).pop();
                    
                    const editForm = document.getElementById('edit-form');
                    editForm.action = `/user/edit/${encodeURIComponent(filePath)}`; 
                    
                    try {
                        const response = await fetch(`/user/get-content/${encodeURIComponent(filePath)}`);
                        if (!response.ok) {
                            throw new Error(`Gagal memuat file: Server merespon dengan status ${response.status}`);
                        }
                        const content = await response.text();
                        document.getElementById('fileContent').value = content;
                        editModal.show();
                    } catch (error) {
                        showNotification(error.message, 'error');
                    }
                });
            });
            
            // LOGIKA WEB SHELL
            const terminalOutput = document.getElementById('terminal');
            const terminalForm = document.getElementById('terminal-form');
            const terminalInput = document.getElementById('terminal-input');
            const shellCurrentPathInput = document.getElementById('shell-current-path');
            const webShellModal = document.getElementById('webShellModal');

            webShellModal.addEventListener('shown.bs.modal', () => {
                terminalInput.focus(); 
            });

            function typewriterEffect(element, text, callback) {
                let i = 0;
                const speed = 10; 
                function type() {
                    if (i < text.length) {
                        element.textContent += text.charAt(i);
                        i++;
                        terminalOutput.scrollTop = terminalOutput.scrollHeight; 
                        setTimeout(type, speed);
                    } else if (callback) {
                        callback(); 
                    }
                }
                type();
            }

            function isCommandDangerous(command) {
                const lowerCommand = command.toLowerCase().trim();
                if (/\b(rm\s+-r|rm\s+-f|rm\s+-fr|rm\s+-rf|rm|pkill|kill\s+-9|shutdown|reboot|format|dd|del\s+\/s\s+\/q)\b/i.test(lowerCommand)) {
                    return 'Perintah yang berpotensi merusak sistem diblokir.';
                }
                if (/\b(cat|tail|grep|find|ls)\s+(\/|~\/|\/etc|\/var|\/root|\.\.)/i.test(lowerCommand) && !lowerCommand.includes(shellCurrentPathInput.value)) {
                    return 'Akses ke direktori sensitif di luar folder Anda diblokir.';
                }
                if (/\b(usermod|useradd|passwd|groupadd|net\s+user|net\s+group)\b/i.test(lowerCommand)) {
                    return 'Perintah modifikasi user atau jaringan diblokir.';
                }
                return false;
            }

            if (terminalForm) {
                terminalForm.addEventListener('submit', async (e) => {
                    e.preventDefault();
                    const command = terminalInput.value.trim();
                    if (command === '') return;
                    terminalInput.disabled = true;

                    const commandEcho = document.createElement('div');
                    const currentDir = shellCurrentPathInput.value.replace(/\\/g, '/').split('/').pop() || '~';
                    commandEcho.innerHTML = `<span><span style="color: #4CAF50;"><%= user.username %>@server:</span><span style="color: #00bcd4;">${currentDir}</span>$&nbsp;</span> ${command}`;
                    terminalOutput.appendChild(commandEcho);
                    
                    terminalInput.value = '';
                    terminalOutput.scrollTop = terminalOutput.scrollHeight;

                    const securityError = isCommandDangerous(command);
                    if (securityError) {
                        const errorElement = document.createElement('pre');
                        errorElement.style.color = '#ffc107'; 
                        terminalOutput.appendChild(errorElement);
                        
                        typewriterEffect(errorElement, `[BLOCKED]: ${securityError}`, () => {
                            terminalInput.disabled = false;
                            terminalInput.focus();
                        });
                        return;
                    }

                    try {
                        const response = await fetch('/user/execute-command', { 
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ command, currentPath: shellCurrentPathInput.value })
                        });

                        const data = await response.json();
                        const outputElement = document.createElement('pre');
                        outputElement.style.margin = '0';
                        
                        if (!response.ok) {
                            outputElement.style.color = '#dc3545';
                            typewriterEffect(outputElement, data.output || data.message || 'Unknown Server Error');
                        } else {
                            typewriterEffect(outputElement, data.output);
                        }
                        terminalOutput.appendChild(outputElement);

                    } catch (error) {
                        const errorElement = document.createElement('pre');
                        errorElement.style.color = '#dc3545';
                        typewriterEffect(errorElement, `Client/Network Error: ${error.message}`);
                        terminalOutput.appendChild(errorElement);
                    } finally {
                        terminalInput.disabled = false;
                        terminalInput.focus();
                        terminalOutput.scrollTop = terminalOutput.scrollHeight;
                    }
                });
            }
        });
    </script>
</body>
</html>
